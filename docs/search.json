[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome",
    "section": "",
    "text": "This is the group project for Advanced Statistical Modeling (STA6257) where we will explore how to use statistical methods to handle missing data in a dataset with a practice called imputation. Our team consists of Yoseling Gomez, Clayton Carpenter, and Stesh Davis-Lewis.\nPlease use the sidebar to navigate our projects pages.\nThe dataset we will be using is palmerpenguins (Horst, Hill, and Gorman 2020)\n\n\n\n\n\n(Horst, Hill, and Gorman 2020) Artwork by @allison_horst\n\n\n\n\nReferences\n\nHorst, Allison Marie, Alison Presmanes Hill, and Kristen B Gorman. 2020. “Palmerpenguins: Palmer Archipelago (Antarctica) Penguin Data.” https://doi.org/10.5281/zenodo.3960218."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "",
    "section": "",
    "text": "Yoseling Gomez\nClayton Carpenter\nStesh Davis-Lewis"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1. Introduction",
    "section": "",
    "text": "As much as researchers may attempt to eliminate or reduce missing values, datasets are rarely, if ever, perfect, which can impact the legitimacy and reliability of the results obtained. There are four main reasons for missing data: missing completely at random, missing at random, missing depending on unobserved predictors, and missingness that depends on the missing value itself.\nWhen data is missing in a dataset, it can be handled in two ways. First would be to simply delete the missing data from the dataset. This is generally the best method if the data is missing at random and makes up for a small amount of the larger dataset. If the data is not missing at random, or if deleting it would remove a substantial amount of the data, there is a statistical technique to handle missing data known as “imputation.” The most common type of imputation is single and multiple. Single imputation treats imputed values as actual values, disregarding the uncertainty of the real value. This method disregards the uncertainty of imputed values and acknowledges them as equivalent to true values in later analysis, disregarding the unpredictability of real values. (Khan and Hoque 2020) Single imputation replaces missing values by using multiple methods, such as replacing the missing value by copying the previous participants’ value, copying over the worst value in the data set, or calculating the mean for the variable. With a single imputation, there is no distinction between observed and imputed values, which could lead to bias, influenced by outliers, can spread errors, no way to detect the imputed values, and this methodology cannot be used for complex data. Despite these drawbacks, simple imputation is one of the most popular types of imputation due to its simplicity and status as the default imputation method in many statistical packages. (Zhang 2016)"
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2. Data",
    "section": "",
    "text": "This project will focus on the penguin dataset in the “palmerpenguin” package (Horst, Hill, and Gorman 2020) from R studio. The penguins’ dataset is comprised of 8 columns and 344 rows based on data collected on three different species of penguins in Palmer Archipelago, Antarctica. This dataset is fairly clean, and this is important for comparison purposes. In this instance, there are only 11 NA values, which is 3% of the entire dataset. During the analysis, we will be removing parts of the dataset and implementing data imputation methodology to compare the accuracy between the actual values in the dataset and the calculated values we have created using different methodologies."
  },
  {
    "objectID": "analysis.html",
    "href": "analysis.html",
    "title": "4. Analysis",
    "section": "",
    "text": "In order to understand the benefits of imputation, we need to perform a linear regression on the entire data set in order to have a reference for what the R-Squared value can be will all of the available data.\n\nlibrary(readr)\nlibrary(missMethods)\nlibrary(simputation)\nlibrary(ggplot2)\n\nset.seed(1) \n\npenguins <- readr::read_csv('penguins.csv')\n\nregg = lm(body_mass_g~ flipper_length_mm, data = penguins)\n\n#print(paste(summary(regg)$adj.r.squared, \"is the R-Squared for the linear model\"))\n\n0.7583 is the R-Squared for the linear model that we will use as the benchmark for the imputation perfromed below."
  },
  {
    "objectID": "methodology.html",
    "href": "methodology.html",
    "title": "3. Methodology",
    "section": "",
    "text": "Techniques for addressing missing data can be simplified into conventional approaches or brought up to date through the application of more recent methods. Although it goes without saying that the more recent methods are always preferable, there are instances in which the older methods could be useful. Also, we have to figure out why the straightforward approaches are not producing the desired results."
  },
  {
    "objectID": "methodology.html#traditional-methods",
    "href": "methodology.html#traditional-methods",
    "title": "3. Methodology",
    "section": "3.3.1 Traditional Methods",
    "text": "3.3.1 Traditional Methods\nOlder solutions for missing data include deletion and single imputation (Zhang 2016). A complete-case analysis, or list-wise elimination, removes all missing values. Pair-wise deletion removes only partial cases to compensate for list-wise deletion data loss (Table 3).\nThis strategy helps with tiny missing data and may not skew analysis. Though it was once the most frequent way to address missing data in quantitative research, it will remove vital information. Imputing data with mean/median is another easy workaround for missing data, however it reduces data volatility and biases analysis.\n\nTable 3. Examples of list wise deletion and pair wise deletion\nA correlation matrix identifies a few missing variable predictors for linear regression imputation. In the regression equation, the best predictors are predictor variables and the variable with missing data is the dependent variable. This predicts missing values. Linear regression-based imputation adds random noise terms to a regression line to restore data variability. Stochastic regression improves this.\nGeneral, scale-item, and time-series methods are also traditional.\nSee Table 4 for Enders’ summary of classic missingness procedures as a road map for handling missing data.\nAll of the above strategies contain bias and fail to address missing data.\nDeleted records and single-valued imputation are two of the more traditional approaches to handling missing data (Alruhaymi and Kim 2021). In a complete-case analysis, also known as list-wise deletion, missing values are completely removed from the dataset and thrown away. As a countermeasure to the loss of data that results from list-wise deletion, pair-wise deletion eliminates only incomplete cases (Table 3). Older solutions for missing data include deletion and single imputation (Zhang 2016). A complete-case analysis, or list-wise elimination, removes all missing values. Pair-wise deletion removes only partial cases to compensate for list-wise deletion data loss (Table 3).\nThis strategy helps with tiny missing data and may not skew analysis. Though it was once the most frequent way to address missing data in quantitative research, it will remove vital information. Imputing data with mean/median is another easy workaround for missing data, however it reduces data volatility and biases analysis.\nA correlation matrix identifies a few missing variable predictors for linear regression imputation. In the regression equation, the best predictors are predictor variables and the variable with missing data is the dependent variable. This predicts missing values. Linear regression-based imputation adds random noise terms to a regression line to restore data variability. Stochastic regression improves this.\nSee Table 4 for Enders’ summary of classic missingness procedures as a road map for handling missing data.\nAll of the above strategies contain bias and fail to address missing data."
  },
  {
    "objectID": "methodology.html#modern-imputation-techniques",
    "href": "methodology.html#modern-imputation-techniques",
    "title": "3. Methodology",
    "section": "3.3.2 Modern Imputation Techniques",
    "text": "3.3.2 Modern Imputation Techniques\nDealing with missing values is the most difficult process since the exact nature of the missing data is unknown, which makes the task more difficult. Multiple imputations and maximum likelihood are the “state of the art” methods that have dealt with the problem of managing missing data in a satisfactory manner. The concept of multiple imputations and how they operate will be the primary focus of this dissertation.\n\nThe method known as multiple imputations (Alruhaymi and Kim 2021) is widely regarded as the most effective strategy for dealing with the issue of missing data. This is because it generates numerous copies of the dataset, each of which contains a unique set of imputed values.\nMaximum-likelihood imputation, which is based on a variance-covariance matrix for the variables and uses all of the data points that are currently available to determine what values should be imputed for missing data.\n\nMultiple imputations produce results that are objective when applied to data from MCAR and MAR. When it comes to dealing with missing data, using methods of multiple imputation can provide a number of benefits for the researcher. When these approaches are used, the amount of bias that is found in the dataset after it has been evaluated is reduced, which is the most significant benefit of utilizing these methods. In addition to this, they enhance the precision of the data, which, in turn, contributes to the advancement of the validity of an experiment that is being carried out using the data as its primary resource. Again, there is an increase in the precision of the data when the data values within a dataset are brought closer together through the use of imputation methods. This brings us back to the original point. On the other hand, imputation processes help to a more accurate statistical analysis since they make a dataset less prone to being biased by outliers. This makes the analysis more accurate overall.\nThe expectation-maximization algorithm and the Bayesian simulation approach are two further examples of methods (Alruhaymi and Kim 2021) .\n\nTable 4. Summary of traditional ways of treating missing data (Alruhaymi and Kim 2021).\nMultiple imputation works effectively with MCAR or MAR missing data. The sample size is maintained and selection is avoided by not dropping cases with incomplete data. It also lowers standard error bias. Imputed data analysis involves imputing missing values, theoretical analysis, and pooling estimations into a single set of results. First, impute missing values to generate enough data sets. Increasing the percentage of missing data requires more imputations. Each imputation creates new data. Step two is examining imputed data in the researcher’s theory-based model. This requires simultaneous processing of each imputed data set. Researcher must specify imputed data in most statistical applications. The final step is pooling findings. Pooling produces a single result that combines imputation uncertainty into standard errors. (Curley et al. 2017)"
  },
  {
    "objectID": "intro.html#what-is-missing-data-and-imputation",
    "href": "intro.html#what-is-missing-data-and-imputation",
    "title": "1. Introduction",
    "section": "1.1 What is Missing Data and Imputation?",
    "text": "1.1 What is Missing Data and Imputation?\nMissing data is a critical issue that can lead to global crises and cybersecurity threats. Researchers have struggled with univariate imputation and deletion, but modern methods are being tested to find the best missing data handling solutions. Multivariate chained equation imputation is a method that prevents missing data during data collection. Bayesian posterior distribution simulation has been improved by researchers. Missing data in data analysis reduces model accuracy, and unknown data detection methods like MCAR and MAR are necessary. Single imputation and deletion are the simplest assumptions, while maximum likelihood and multiple imputation are optimal for missing data. Reliable statistical results require identifying missingness processes to ensure accurate data analysis.\nMissing completely at random (MCAR) is best described as data missing entirely at random and unrelated to observed or unobserved factors. Missing at random (MAR) describes a missing variable due to other observed variables within the data set. Missing depending on unobserved predictors (MNAR) describes the missing variable due to unobserved factors within our data set. Missingness that depends on the missing value describes missing data due to the information the participant does not want to make available.\n\nTable 1. Missing data mechanisms explained."
  },
  {
    "objectID": "intro.html#imputation",
    "href": "intro.html#imputation",
    "title": "1. Introduction",
    "section": "1.2 Imputation",
    "text": "1.2 Imputation\nMICE, or Multivariate Imputation by Chained Equation, is a method that anticipates missing data by using existing data for other variables. It creates an imputed dataset by substituting predicted values for missing values. This process generates multiple imputed datasets through iteration, which are then assessed using conventional statistical methods. The results of multiple analyses are displayed. (Khan and Hoque 2020) The downside of this methodology is that it can be complex to implement, assumes that the data is missing at random, has a risk of overfitting, and requires many resources; however, it has the ability to impute more accurate data than single imputation based on underlying patterns in the data."
  },
  {
    "objectID": "data.html#variables",
    "href": "data.html#variables",
    "title": "2. Data",
    "section": "2.1 Variables",
    "text": "2.1 Variables\n\nSpecies - defines the species of the penguins as Adelie, Chinstrap, or Gentoo\nIsland - what island (Biscoe, Dream, or Torgersen) the penguins were found in the Palmer Archipelago, Antarctica\nBill_length_mm - a number indicating bill length in millimeters\nBill_depth_mm - a number indicating bill depth in millimeters\nFlipper_length_mm - an integer indicating flipper length in millimeters\nBody_mass_g - an integer indicating body mass in grams\nSex - a factor that marks the penguins as female or male\nYear - an integer that defines the study year as 2007, 2008, or 2009\n\nA visual depiction of how bill length and depth is measured:\n\n\n\n(Horst, Hill, and Gorman 2020) Artwork by @allison_horst"
  },
  {
    "objectID": "data.html#data-exploration",
    "href": "data.html#data-exploration",
    "title": "2. Data",
    "section": "2.2 Data Exploration",
    "text": "2.2 Data Exploration\nBelow is a summary of the palmerpenguins dataset (Horst, Hill, and Gorman 2020) using the summarytools (Comtois 2022) package and visualizations from the palmerpenguins package. (Horst, Hill, and Gorman 2020)\n\n#Shows the first six rows of the data set\nlibrary(palmerpenguins)\ndata(package = 'palmerpenguins')\nhead(penguins)\n\n# A tibble: 6 × 8\n  species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n1 Adelie  Torgersen           39.1          18.7               181        3750\n2 Adelie  Torgersen           39.5          17.4               186        3800\n3 Adelie  Torgersen           40.3          18                 195        3250\n4 Adelie  Torgersen           NA            NA                  NA          NA\n5 Adelie  Torgersen           36.7          19.3               193        3450\n6 Adelie  Torgersen           39.3          20.6               190        3650\n# ℹ 2 more variables: sex <fct>, year <int>\n\n#Shows all the variables in the data set \nstr(penguins)\n\ntibble [344 × 8] (S3: tbl_df/tbl/data.frame)\n $ species          : Factor w/ 3 levels \"Adelie\",\"Chinstrap\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ island           : Factor w/ 3 levels \"Biscoe\",\"Dream\",..: 3 3 3 3 3 3 3 3 3 3 ...\n $ bill_length_mm   : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ bill_depth_mm    : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ flipper_length_mm: int [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ body_mass_g      : int [1:344] 3750 3800 3250 NA 3450 3650 3625 4675 3475 4250 ...\n $ sex              : Factor w/ 2 levels \"female\",\"male\": 2 1 1 NA 1 2 1 2 NA NA ...\n $ year             : int [1:344] 2007 2007 2007 2007 2007 2007 2007 2007 2007 2007 ...\n\n#Describes the penguins data set\nlibrary(summarytools)\ndescr(penguins)\n\nNon-numerical variable(s) ignored: species, island, sex\n\n\nDescriptive Statistics  \npenguins  \nN: 344  \n\n                    bill_depth_mm   bill_length_mm   body_mass_g   flipper_length_mm      year\n----------------- --------------- ---------------- ------------- ------------------- ---------\n             Mean           17.15            43.92       4201.75              200.92   2008.03\n          Std.Dev            1.97             5.46        801.95               14.06      0.82\n              Min           13.10            32.10       2700.00              172.00   2007.00\n               Q1           15.60            39.20       3550.00              190.00   2007.00\n           Median           17.30            44.45       4050.00              197.00   2008.00\n               Q3           18.70            48.50       4750.00              213.00   2009.00\n              Max           21.50            59.60       6300.00              231.00   2009.00\n              MAD            2.22             7.04        889.56               16.31      1.48\n              IQR            3.10             9.27       1200.00               23.00      2.00\n               CV            0.12             0.12          0.19                0.07      0.00\n         Skewness           -0.14             0.05          0.47                0.34     -0.05\n      SE.Skewness            0.13             0.13          0.13                0.13      0.13\n         Kurtosis           -0.92            -0.89         -0.74               -1.00     -1.51\n          N.Valid          342.00           342.00        342.00              342.00    344.00\n        Pct.Valid           99.42            99.42         99.42               99.42    100.00"
  },
  {
    "objectID": "analysis.html#single-imputation",
    "href": "analysis.html#single-imputation",
    "title": "4. Analysis",
    "section": "4.3 Single Imputation",
    "text": "4.3 Single Imputation\nThe most simple way to perform imputation is with the mean or median of the variable. However doing so will reduce the overall variability in the dataset.\n\n# Make a copy of the dataset and calculate the mean of the specific column\npenguins_Mean_imputated <- penguins_missing\n\n\n# If we only replaced the missing values for flipper_length_mm\nflipper_length_mm_mean_value <- mean(penguins$flipper_length_mm, na.rm = TRUE)\npenguins_Mean_imputated$flipper_length_mm[is.na(penguins_Mean_imputated$flipper_length_mm)] <- flipper_length_mm_mean_value\npenguins_Mean_imputated[!complete.cases(penguins), ]\n\n# A tibble: 11 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <chr>   <chr>              <dbl>         <dbl>             <dbl>       <dbl>\n 1 Adelie  Torgersen           NA            NA                201.          NA\n 2 Adelie  Torgersen           34.1          18.1              201.        3475\n 3 Adelie  Torgersen           42            20.2              190         4250\n 4 Adelie  Torgersen           37.8          17.1              186         3300\n 5 Adelie  Torgersen           37.8          17.3              180         3700\n 6 Adelie  Dream               37.5          18.9              201.        2975\n 7 Gentoo  Biscoe              44.5          14.3              216         4100\n 8 Gentoo  Biscoe              46.2          14.4              201.        4650\n 9 Gentoo  Biscoe              47.3          13.8              201.        4725\n10 Gentoo  Biscoe              44.5          15.7              201.        4875\n11 Gentoo  Biscoe              NA            NA                201.          NA\n# ℹ 2 more variables: sex <chr>, year <dbl>\n\nregg = lm(body_mass_g~ flipper_length_mm, data = penguins_Mean_imputated, na.action=na.omit)\n#print(paste(summary(regg)$adj.r.squared, \"is the R-Squared for the linear model where missing values are imputed as the mean.\"))\n\n0.4016 is the R-Squared for the linear model where missing values are imputed as the mean.\n\n# Make a copy of the dataset and calculate the mean of the specific column\npenguins_Median_imputated <- penguins_missing\n\n\n# If we only replaced the missing values for flipper_length_mm\nflipper_length_mm_median_value <- median(penguins$flipper_length_mm, na.rm = TRUE)\npenguins_Median_imputated$flipper_length_mm[is.na(penguins_Median_imputated$flipper_length_mm)] <- flipper_length_mm_median_value\npenguins_Median_imputated[!complete.cases(penguins), ]\n\n# A tibble: 11 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <chr>   <chr>              <dbl>         <dbl>             <dbl>       <dbl>\n 1 Adelie  Torgersen           NA            NA                 197          NA\n 2 Adelie  Torgersen           34.1          18.1               197        3475\n 3 Adelie  Torgersen           42            20.2               190        4250\n 4 Adelie  Torgersen           37.8          17.1               186        3300\n 5 Adelie  Torgersen           37.8          17.3               180        3700\n 6 Adelie  Dream               37.5          18.9               197        2975\n 7 Gentoo  Biscoe              44.5          14.3               216        4100\n 8 Gentoo  Biscoe              46.2          14.4               197        4650\n 9 Gentoo  Biscoe              47.3          13.8               197        4725\n10 Gentoo  Biscoe              44.5          15.7               197        4875\n11 Gentoo  Biscoe              NA            NA                 197          NA\n# ℹ 2 more variables: sex <chr>, year <dbl>\n\nregg = lm(body_mass_g~ flipper_length_mm, data = penguins_Median_imputated, na.action=na.omit)\n#print(paste(summary(regg)$adj.r.squared, \"is the R-Squared for the linear model where missing values are imputed as the median.\"))\n\n0.4037 is the R-Squared for the linear model where missing values are imputed as the median.\nAs we can see the R-Squared dramatically decreased since we performed a basic version of imputation that just inserts one number for all missing values. Now we will proceed to impute linear model predicted values using the simputation (Loo 2022) package into the missing data set for bill_length_mm and construct the same model to achieve an increase in r-squared.\n\npenguins_imputed <- impute_lm(penguins_missing, flipper_length_mm ~ species + bill_length_mm + bill_depth_mm)\n\nregg = lm(body_mass_g~ flipper_length_mm, data = penguins_imputed)\n#print(paste(summary(regg)$adj.r.squared, \"is the R-Squared for the linear model where imputation of missing values was performed with another linear model before modeling.\"))\n\n0.7732 is the R-Squared for the linear model where imputation of missing values was performed with another linear model before modeling."
  },
  {
    "objectID": "analysis.html#multiple-imputation",
    "href": "analysis.html#multiple-imputation",
    "title": "4. Analysis",
    "section": "4.4 Multiple Imputation",
    "text": "4.4 Multiple Imputation\nTo use a more complex form of imputation, we will perform multiple imputation on the data set using the mice library (Buuren and Groothuis-Oudshoorn 2011).\n\nlibrary(mice)\npenguins_missing.imp <- mice(penguins_missing, m=5)\n\n\n iter imp variable\n  1   1  bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g\n  1   2  bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g\n  1   3  bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g\n  1   4  bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g\n  1   5  bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g\n  2   1  bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g\n  2   2  bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g\n  2   3  bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g\n  2   4  bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g\n  2   5  bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g\n  3   1  bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g\n  3   2  bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g\n  3   3  bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g\n  3   4  bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g\n  3   5  bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g\n  4   1  bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g\n  4   2  bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g\n  4   3  bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g\n  4   4  bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g\n  4   5  bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g\n  5   1  bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g\n  5   2  bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g\n  5   3  bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g\n  5   4  bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g\n  5   5  bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g\n\nfit <- with(penguins_missing.imp, lm(body_mass_g~ flipper_length_mm))\nprint(pool.r.squared(fit))\n\n          est     lo 95     hi 95       fmi\nR^2 0.7404551 0.6794023 0.7915921 0.3094308\n\n\nSince multiple imputation creates multiple linear regressions based on multiple imputations, the estimated r-value is 0.7317 with a 95% confidence interval between 0.6664 and 0.7861. Although the R-Squared estimate is lower than the single imputation based on linear regression, this method performs much better than mean and median single imputations performed previously."
  },
  {
    "objectID": "analysis.html#other-considerations",
    "href": "analysis.html#other-considerations",
    "title": "4. Analysis",
    "section": "4.5 Other Considerations",
    "text": "4.5 Other Considerations\nAs shown in the R-Squared output for each model. We can see a small improvement in the accuracy of this model by performing imputation. This accuracy was possible since there wasnt an issue with missing values in species, bill_length_mm, and bill_depth_mm which were used to impute flipper_length_mm. But what happens if these variables contained large amounts of missing values that must be replaced as well?\n\npenguins_missing_all <- delete_MCAR(penguins,0.5,c(\"flipper_length_mm\",\"bill_length_mm\",\"bill_depth_mm\",\"body_mass_g\",\"species\",\"sex\"))\ntryCatch(\n  {\n  penguins_imputed_missing <- impute_lm(penguins_missing_all, flipper_length_mm ~ species + bill_length_mm + bill_depth_mm)\n\n  penguins_imputed_missing[!complete.cases(penguins_imputed_missing), ]\n\n  regg = lm(body_mass_g~ flipper_length_mm, data = penguins_missing_all, na.action = na.fail())\n  print(paste(summary(regg)$adj.r.squared, \"is the R-Squared for the linear model where imputation of missing values was performed with another linear model before modeling.\"))\n  },\n  error = function(e) \n  {\n    print(\"This caused an error!\") # or whatever error handling code you want\n  }\n)\n\n[1] \"This caused an error!\"\n\n\nIt is important to note, that although it appears that we are imputing missing values in the code, the linear model fails to impute when there are missing values in the predicting variables. To avoid this error, below we will impute most of the missing data with mean or mode and attempt to impute flipper_length_mm with a linear model. This method will not be accurate due to the same underlying issue that we saw with imputing mean before.\n\npenguins_missing <- delete_MCAR(penguins,0.5,c(\"flipper_length_mm\",\"bill_length_mm\",\"bill_depth_mm\",\"body_mass_g\",\"species\",\"sex\"))\nbill_length_mm_mean_value <- mean(penguins$bill_length_mm, na.rm = TRUE)\nbill_depth_mm_mean_value <- mean(penguins$bill_depth_mm, na.rm = TRUE)\nflipper_length_mm_mean_value <- mean(penguins$flipper_length_mm, na.rm = TRUE)\nbody_mass_g_mean_value <- mean(penguins$body_mass_g, na.rm = TRUE)\nspecies_mode_value <- mode(penguins$species)\nsex_mode_value <- mode(penguins$sex)\n\n# Replace NAs in the specific column with the mean\npenguins_Mean_imputated$bill_length_mm[is.na(penguins_Mean_imputated$bill_length_mm)] <- bill_length_mm_mean_value\npenguins_Mean_imputated$bill_depth_mm[is.na(penguins_Mean_imputated$bill_depth_mm)] <- bill_depth_mm_mean_value\npenguins_Mean_imputated$flipper_length_mm[is.na(penguins_Mean_imputated$flipper_length_mm)] <- flipper_length_mm_mean_value\npenguins_Mean_imputated$body_mass_g[is.na(penguins_Mean_imputated$body_mass_g)] <- body_mass_g_mean_value\npenguins_Mean_imputated$species[is.na(penguins_Mean_imputated$species)] <- species_mode_value\npenguins_Mean_imputated$sex[is.na(penguins_Mean_imputated$sex)] <- sex_mode_value\n\npenguins_Mean_imputated[!complete.cases(penguins_Mean_imputated), ]\n\n# A tibble: 0 × 8\n# ℹ 8 variables: species <chr>, island <chr>, bill_length_mm <dbl>,\n#   bill_depth_mm <dbl>, flipper_length_mm <dbl>, body_mass_g <dbl>, sex <chr>,\n#   year <dbl>\n\npenguins_imputed <- impute_lm(penguins_Mean_imputated, flipper_length_mm ~ species + bill_length_mm + bill_depth_mm)\n\nregg = lm(body_mass_g~ flipper_length_mm, data = penguins_imputed)\n#print(paste(summary(regg)$adj.r.squared, \"is the R-Squared for the linear model where imputation of missing values was performed with another linear model before modeling.\"))\n\n0.4016 is the R-Squared for the linear model where imputation of missing values was performed with another linear model before modeling."
  },
  {
    "objectID": "methodology.html#detection-of-the-type-of-missingness",
    "href": "methodology.html#detection-of-the-type-of-missingness",
    "title": "3. Methodology",
    "section": "3.1 Detection of the Type of Missingness",
    "text": "3.1 Detection of the Type of Missingness\nStatistical methods for missing data assume data is MCAR. Data missingness assumptions must be checked before imputation. Methods such as Multiple Imputation by Chained Equations (MICE) are extremely dependent on the presumption that missing values are either MCAR or MAR. Verifying requires data inspection and testing. Little’s test for MCAR detection and the likelihood-ratio test for MAR were created by statisticians to help find missingness."
  },
  {
    "objectID": "methodology.html#tests-of-missing-data",
    "href": "methodology.html#tests-of-missing-data",
    "title": "3. Methodology",
    "section": "3.2 Tests of Missing Data",
    "text": "3.2 Tests of Missing Data\nMCAR assumes missing data values are distributed randomly through observations. To confirm this, divide the dataset into two sets, one with missing data and the other non-missing data. If MCAR exists, use pairwise or list-wise deletion. If not, use MICE algorithm. In MAR, missing data is distributed in sub-samples. Traditional methods and tests help identify missing data mechanisms.\n\nLittle’s MCAR data test is extensively used to determine if data is MCAR. Little’s MCAR test is the most important for missing cases. The data is considered to be MCAR and missingness is ignored if its p-value is statistically insignificant. For observations with missing data values, we can use listwise deletion or the most advanced relabel imputation method, multiple imputation by chained equations, to increase the sample size and statistical power. (Alruhaymi and Kim 2021)\nA likelihood-ratio test helps choose the best model from two. Diggle (Alruhaymi and Kim 2021) proposes a test for MAR assumption, but for p-value distribution under the null hypothesis, it was suggested to use the Kolmogorov’s test, as 𝑝𝑗 acts like a uniform distribution.\nThe Chi-Square test compares two categorical variables for goodness of fit and independence. It uses contingency tables to calculate observed and expected values, and follows the same steps as hypothesis testing. The test involves stating null and alternative hypotheses, choosing the level of significance, finding critical values, and drawing a conclusion about the null hypothesis, rejecting it if the alternative hypothesis is true.\nThe data are considered to be MCAR if the t-statistic is negligible, as determined by Dixon’s MCAR test, which compares the means of complete and incomplete cases. If, on the other hand, the t statistic is found to be significant, the data do not fit the MCAR model."
  },
  {
    "objectID": "methodology.html#missing-data-imputation",
    "href": "methodology.html#missing-data-imputation",
    "title": "3. Methodology",
    "section": "3.3 Missing Data Imputation",
    "text": "3.3 Missing Data Imputation\nThere are two main types of missing data techniques: simple traditional techniques and modern techniques. Modern techniques are always better, but there are times when old techniques may work."
  },
  {
    "objectID": "conclusion.html",
    "href": "conclusion.html",
    "title": "5. Conclusion",
    "section": "",
    "text": "Although we would love to have a perfect dataset in every project, that is unrealistic. There will always be missing values due to four primary reasons: missing completely at random, missing at random, missing depending on unobserved predictors, and missingness that depends on the missing value itself.\nThere may be different ways to handle these values depending on the reason and the count of missing values. The simplest method is to eliminate the rows with missing values; this method could be used for the penguins dataset we used in this project since only 11 rows had missing values, about 3% of the entire dataset. However, we selected this dataset to demonstrate simple and multiple imputations against a relatively clean dataset.\nFor simple imputation, we removed half of the values in the flipper_length_mm, resulting in a 0.7569 R-squared, which is a good result. However, when we replaced the missing values with the mean value, we saw a decrease to 0.4016 R-squared—moving on to multiple imputations for species, bill_length_mm, and bill_depth_mm result in an r-square value of 0.7732.\nNot all imputation methods yield the same results and may not closely match the original values. Always research the best methodology to impute missing values since it will vary by case, and each methodology has benefits and drawbacks."
  },
  {
    "objectID": "analysis.html#creating-missingness",
    "href": "analysis.html#creating-missingness",
    "title": "4. Analysis",
    "section": "4.2 Creating Missingness",
    "text": "4.2 Creating Missingness\nTo demonstrate the benefits of imputation, we will create missingness in a predictor variable and create a model by excluding the missing data. Then we will perform imputation on the dataset and recreate the model to see if there is a difference in performance. Before we perform imputations on the penguins (Horst, Hill, and Gorman 2020) dataset, first the data must be cleaned to omit all incomplete records so we can have the actual values to compare our imputations against. The code block below demonstrates the penguins dataset that we will be using, cleaning the incomplete records, and displays the correlation using the ggplot2 (Wickham 2016) package between body_mass_g and flipper_legth_mm that we will be using to construct a model before and after imputation of missing data.\n\npenguin_rows_with_na <- penguins[!complete.cases(penguins), ]\nprint(penguin_rows_with_na)\n\n# A tibble: 11 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <chr>   <chr>              <dbl>         <dbl>             <dbl>       <dbl>\n 1 Adelie  Torgersen           NA            NA                  NA          NA\n 2 Adelie  Torgersen           34.1          18.1               193        3475\n 3 Adelie  Torgersen           42            20.2               190        4250\n 4 Adelie  Torgersen           37.8          17.1               186        3300\n 5 Adelie  Torgersen           37.8          17.3               180        3700\n 6 Adelie  Dream               37.5          18.9               179        2975\n 7 Gentoo  Biscoe              44.5          14.3               216        4100\n 8 Gentoo  Biscoe              46.2          14.4               214        4650\n 9 Gentoo  Biscoe              47.3          13.8               216        4725\n10 Gentoo  Biscoe              44.5          15.7               217        4875\n11 Gentoo  Biscoe              NA            NA                  NA          NA\n# ℹ 2 more variables: sex <chr>, year <dbl>\n\npenguins_filtered <- na.omit(penguins)\n\n\nggplot(penguins_filtered, aes(body_mass_g, flipper_length_mm)) + \n  geom_count() + \n  geom_smooth(method='lm')\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nIn the code block below, we will create 50% missing at random data in the column flipper_length_mm using the missMethods (Rockel 2022) package. Then we will create a linear regression to display the r-squared that would be achieved by deleting the missing data from the data set.\n\npenguins_missing <- delete_MCAR(penguins,0.5,\"flipper_length_mm\")\n\nregg = lm(body_mass_g~ flipper_length_mm, data = penguins_missing, na.action=na.omit) \n#print(paste(summary(regg)$adj.r.squared, \"is the R-Squared for the linear model where missing values are excluded from the dataset.\"))\n\n0.7569 is the R-Squared for the linear model where missing values are excluded from the dataset. Although this R-Squared is good, it omits half of the data since 50% of the values for flipper_length_mm are missing. In the following code blocks, we will explore imputation of the the missing data."
  },
  {
    "objectID": "slides/slide1.html",
    "href": "slides/slide1.html",
    "title": "Habits",
    "section": "",
    "text": "Turn off alarm\nGet out of bed"
  },
  {
    "objectID": "slides/slide1.html#going-to-sleep",
    "href": "slides/slide1.html#going-to-sleep",
    "title": "Habits",
    "section": "Going to sleep",
    "text": "Going to sleep\n\nGet in bed\nCount sheep"
  },
  {
    "objectID": "slides/slide1.html#getting-up",
    "href": "slides/slide1.html#getting-up",
    "title": "Habits",
    "section": "Getting up",
    "text": "Getting up\n\nTurn off alarm\nGet out of bed"
  },
  {
    "objectID": "slides/slide1.html#breakfast",
    "href": "slides/slide1.html#breakfast",
    "title": "Habits",
    "section": "Breakfast",
    "text": "Breakfast\n\nEat eggs\nDrink coffee"
  },
  {
    "objectID": "slides/slide1.html#dinner",
    "href": "slides/slide1.html#dinner",
    "title": "Habits",
    "section": "Dinner",
    "text": "Dinner\n\nEat spaghetti\nDrink wine"
  },
  {
    "objectID": "slides/slidedeck.html#getting-up",
    "href": "slides/slidedeck.html#getting-up",
    "title": "Missing Data and Imputation",
    "section": "Getting up",
    "text": "Getting up\n\nTurn off alarm\nGet out of bed"
  },
  {
    "objectID": "slides/slidedeck.html#breakfast",
    "href": "slides/slidedeck.html#breakfast",
    "title": "Missing Data and Imputation",
    "section": "Breakfast",
    "text": "Breakfast\n\nEat eggs\nDrink coffee"
  },
  {
    "objectID": "slides/slidedeck.html#dinner",
    "href": "slides/slidedeck.html#dinner",
    "title": "Missing Data and Imputation",
    "section": "Dinner",
    "text": "Dinner\n\nEat spaghetti\nDrink wine"
  },
  {
    "objectID": "slides/slidedeck.html#going-to-sleep",
    "href": "slides/slidedeck.html#going-to-sleep",
    "title": "Missing Data and Imputation",
    "section": "Going to sleep",
    "text": "Going to sleep\n\nGet in bed\nCount sheep"
  },
  {
    "objectID": "slides/slidedeck.html#what-is-missing-data-and-imputation",
    "href": "slides/slidedeck.html#what-is-missing-data-and-imputation",
    "title": "Missing Data and Imputation",
    "section": "What is Missing Data and Imputation?",
    "text": "What is Missing Data and Imputation?\n\nImperfect datasets with missing values can impact the legitimacy and reliability of the results obtained.\nTypes of missing data: MAR, MCAR, and MNAR"
  },
  {
    "objectID": "slides/slidedeck.html#imputation",
    "href": "slides/slidedeck.html#imputation",
    "title": "Missing Data and Imputation",
    "section": "Imputation",
    "text": "Imputation\n\nSimple Imputation: Replacing the missing value with one imputed value.\nMultiple Imputation: Creating multiple datasets with multiple imputed values.\nMultivariate Imputation by Chained Equation: Method that anticipates missing data by using existing data for other variables."
  },
  {
    "objectID": "slides/slidedeck.html#palmerpenguin",
    "href": "slides/slidedeck.html#palmerpenguin",
    "title": "Missing Data and Imputation",
    "section": "palmerpenguin",
    "text": "palmerpenguin\n\nThe penguins’ dataset is comprised of 8 columns and 344 rows based on data collected on three different species of penguins in Palmer Archipelago, Antarctica"
  },
  {
    "objectID": "slides/slidedeck.html#variables",
    "href": "slides/slidedeck.html#variables",
    "title": "Missing Data and Imputation",
    "section": "Variables",
    "text": "Variables\n\nSpecies\nIsland\nBill_length_mm\nBill_depth_mm\nFlipper_length_mm\nBody_mass_g\nSex\nYear"
  },
  {
    "objectID": "slides/slidedeck.html#summary",
    "href": "slides/slidedeck.html#summary",
    "title": "Missing Data and Imputation",
    "section": "Summary",
    "text": "Summary"
  },
  {
    "objectID": "slides/slidedeck.html#image",
    "href": "slides/slidedeck.html#image",
    "title": "Missing Data and Imputation",
    "section": "Image",
    "text": "Image"
  },
  {
    "objectID": "slides/slidedeck.html#what-is-missing-data-and-what-are-the-impacts",
    "href": "slides/slidedeck.html#what-is-missing-data-and-what-are-the-impacts",
    "title": "Missing Data and Imputation",
    "section": "What is Missing Data and what are the impacts?",
    "text": "What is Missing Data and what are the impacts?\n\nMissing data are null values in a dataset caused by issues such as non-responses or faulty measurement sensors\nTypes of missing data: MAR, MCAR, and MNAR\nImperfect datasets with missing values can impact the legitimacy and reliability of the results obtained."
  },
  {
    "objectID": "slides/slidedeck.html#summary-1",
    "href": "slides/slidedeck.html#summary-1",
    "title": "Missing Data and Imputation",
    "section": "Summary",
    "text": "Summary\n\n“Most, if not all, datasets will have missing values and require values to be imputed. We used a reasonably clean palmerpenguin dataset to demonstrate the difference between actual and imputed values. Not all imputation methods yielded the same results, nor were they a perfect match to the original values.\nThe best methodology will be based on several factors, such as what type of data is missing, portion of missing values, software packages, etc. We advise everyone to research the best methodology for their dataset; every method has benefits and drawbacks.”\n\n\n\n\n\n\n\nRockel, Tobias. 2022. “missMethods: Methods for Missing Data.” https://CRAN.R-project.org/package=missMethods."
  },
  {
    "objectID": "slides/slidedeck.html#linear-regression-before-imputation",
    "href": "slides/slidedeck.html#linear-regression-before-imputation",
    "title": "Missing Data and Imputation",
    "section": "Linear Regression before Imputation",
    "text": "Linear Regression before Imputation\n\nlibrary(readr)\nlibrary(missMethods)\nlibrary(simputation)\nlibrary(ggplot2)\n\nset.seed(1) \n\npenguins <- readr::read_csv('penguins.csv')\n\nregg = lm(body_mass_g~ flipper_length_mm, data = penguins)\n\n\n0.7583 is the R-Squared for the linear model on the full dataset that we will use as the benchmark."
  },
  {
    "objectID": "slides/slidedeck.html#creating-missingness",
    "href": "slides/slidedeck.html#creating-missingness",
    "title": "Missing Data and Imputation",
    "section": "Creating Missingness",
    "text": "Creating Missingness\n\npenguins_missing <- delete_MCAR(penguins,0.5,\"flipper_length_mm\")\nregg = lm(body_mass_g~ flipper_length_mm, data = penguins_missing, na.action=na.omit) \n\n\nThis creates 50% missing at random data in the column flipper_length_mm using the missMethods (Rockel 2022) package.\n0.7569 is the R-Squared for the linear model where missing values are excluded from the dataset."
  },
  {
    "objectID": "slides/slidedeck.html#single-imputation",
    "href": "slides/slidedeck.html#single-imputation",
    "title": "Missing Data and Imputation",
    "section": "Single Imputation",
    "text": "Single Imputation\n\n# Make a copy of the dataset and calculate the mean of the specific column\npenguins_Mean_imputated <- penguins_missing\n\n\n# If we only replaced the missing values for flipper_length_mm\nflipper_length_mm_mean_value <- mean(penguins$flipper_length_mm, na.rm = TRUE)\npenguins_Mean_imputated$flipper_length_mm[is.na(penguins_Mean_imputated$flipper_length_mm)] <- flipper_length_mm_mean_value\n\nregg = lm(body_mass_g~ flipper_length_mm, data = penguins_Mean_imputated, na.action=na.omit)\n\n\n0.4016 is the R-Squared for the linear model where missing values are imputed as the mean."
  },
  {
    "objectID": "slides/slidedeck.html#single-imputation-continued",
    "href": "slides/slidedeck.html#single-imputation-continued",
    "title": "Missing Data and Imputation",
    "section": "Single Imputation Continued",
    "text": "Single Imputation Continued\n\npenguins_imputed <- impute_lm(penguins_missing, flipper_length_mm ~ species + bill_length_mm + bill_depth_mm)\n\nregg = lm(body_mass_g~ flipper_length_mm, data = penguins_imputed)\n\n\n0.7732 is the R-Squared for the linear model where imputation of missing values was performed with another linear model before modeling."
  },
  {
    "objectID": "slides/slidedeck.html#multiple-imputation",
    "href": "slides/slidedeck.html#multiple-imputation",
    "title": "Missing Data and Imputation",
    "section": "Multiple Imputation",
    "text": "Multiple Imputation\n\nlibrary(mice)\npenguins_missing.imp <- mice(penguins_missing, m=5)\nfit <- with(penguins_missing.imp, lm(body_mass_g~ flipper_length_mm))\nprint(pool.r.squared(fit))\n\n\nSince multiple imputation creates multiple linear regressions based on multiple imputations, the estimated r-value is 0.7317 with a 95% confidence interval between 0.6664 and 0.7861."
  }
]