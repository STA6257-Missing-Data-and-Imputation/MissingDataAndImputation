---
title: "Missing Data and Imputation"
author: "Yoseling Gomez - Clayton Carpenter - Stesh Davis-Lewis"
format: revealjs
bibliography: references.bib
---

# Introduction

## What is Missing Data and what are the impacts?

-   Missing data are null values in a dataset caused by issues such as non-responses or faulty measurement sensors
-   Types of missing data:
    -   Missing at random (MAR)
    -   Missing completey at randrom (MCAR)
    -   Missing not at random (MNAR)
-   Imperfect datasets with missing values can impact the legitimacy and reliability of the results obtained.

## Imputation

-   Simple Imputation: Replacing the missing value with one imputed value.
-   Multiple Imputation: Creating multiple datasets with multiple imputed values.
-   Multivariate Imputation by Chained Equation: Method that anticipates missing data by using existing data for other variables.

# Data

## palmerpenguin

-   The penguins' dataset is comprised of 8 columns and 344 rows based on data collected on three different species of penguins in Palmer Archipelago, Antarctica

```{r}
#| echo: true
penguins <- readr::read_csv('penguins.csv')
head(penguins)
```

## Variables

-   Species
-   Island
-   Bill_length_mm
-   Bill_depth_mm
-   Flipper_length_mm
-   Body_mass_g
-   Sex
-   Year

## Variables: Species

```{r}
#| echo: false
library(ggplot2)
library(dplyr)

ggplot(penguins, aes(x = species, fill = species)) + geom_bar() +
  labs(x = "Species", y = "Count", title = "Count of Species", fill = "Species") +
  geom_text(
    stat = "count",
    aes(label = stat(count)),
    position = position_stack(vjust = 0.9),
    show.legend = FALSE)

# count_table <- penguins %>%
#   group_by(species) %>%
#   summarize(count = sum(!is.na(species)))
# 
# total_row <- count_table %>% summarise(species = "Total", count = sum(count))
# count_table_with_total <- bind_rows(count_table, total_row)
# print(count_table_with_total)
```

## Variables: Island

```{r}
#| echo: false
ggplot(penguins, aes(x = island, fill = island)) + geom_bar() +
  labs(x = "Island", y = "Count", title = "Count of Island", fill = "Island") +
  geom_text(
    stat = "count",
    aes(label = stat(count)),
    position = position_stack(vjust = 0.9),
    show.legend = FALSE) 

# count_table <- penguins %>%
#   group_by(island) %>%
#   summarize(count = sum(!is.na(island)))
# 
# total_row <- count_table %>% summarise(island = "Total", count = sum(count))
# count_table_with_total <- bind_rows(count_table, total_row)
# print(count_table_with_total)
```

## Variables: Bill Length & Bill Depth

```{r}
#| echo: false
ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm, color = species)) + geom_point() +
  labs(x = "Bill Length (mm)", y = "Bill Depth (mm)", title = "Penguin Bill Dimensions by Species") +
  scale_color_discrete(name = "Penguin Species")
```

## Variables: Flipper_length_mm

```{r}
#| echo: false
ggplot(penguins, aes(x = species, y = flipper_length_mm, fill = species)) +
  geom_boxplot() +
  labs(x = "Species", y = "Flipper Length (mm)", title = "Flipper Length by Species", fill = "Species")
```

## Variables: Body_mass_g

```{r}
#| echo: false
ggplot(penguins, aes(x = species, y = body_mass_g, fill = species)) +
  geom_boxplot() +
  labs(x = "Species", y = "Body Mass (g)", title = "Body Mass by Species", fill = "Species")
```

## Variables: Sex

```{r}
#| echo: false
ggplot(penguins, aes(x = "", fill = sex)) +
  geom_bar(stat = "count", width = 1, show.legend = TRUE) +
  coord_polar(theta = "y") +
  labs(title = "Percentage Distribution of Penguin Sexes", fill = "Sex") +
  geom_text(stat = "count", aes(label = scales::percent(stat(count)/sum(stat(count)))), position = position_stack(vjust = 0.5)) +
  theme(axis.text.x = element_blank(), axis.text.y = element_blank()) + theme_void()
```

## Variables: Year

```{r}
#| echo: false
ggplot(penguins, aes(x = factor(year), fill = species)) +
  geom_bar() +
  labs(x = "Year", y = "Count of Species Observations", title = "Species Observations Collected Each Year", fill = "Species") +
  geom_text(
    aes(label = ..count..),
    stat = "count",
    position = position_stack(vjust = 0.5),
    show.legend = FALSE) 
```

## Image

![](/imgs/culmen_depth.png)

# Methodology

## Detection of the Type of Missingness

-   The assumption that missing values are either MCAR or MAR is crucial to the success of methods like Multiple Imputation by Chained Equations (MICE).
-   Little's test for MCAR detection and the likelihood-ratio test for MAR were established by statisticians to help uncover missingness.

## Missing Data Imputation

-   There are two main types of missing data techniques: simple traditional techniques and modern techniques.

**Traditional Methods:**

-   Deleted records and single-valued imputation are two of the more traditional approaches to handling missing data
-   List-wise deletion, missing values are completely removed from the dataset and thrown away. - Pair-wise deletion removes only partial cases to compensate for list-wise deletion data loss

## Modern Techniques

-   Multiple imputations generates numerous copies of the dataset, each of which contains a unique set of imputed values.
-   Maximum-likelihood imputation uses all of the data points to determine what values should be imputed for missing data.

# Analysis

## Linear Regression before Imputation

```{r}
#| echo: true
library(readr)
library(missMethods)
library(simputation)
library(ggplot2)

set.seed(1) 

penguins <- readr::read_csv('penguins.csv')

regg = lm(body_mass_g~ flipper_length_mm, data = penguins)

```

-   0.7583 is the R-Squared for the linear model on the full dataset that we will use as the benchmark.

## Creating Missingness

```{r}
#| warning: false
#| echo: true
penguins_missing <- delete_MCAR(penguins,0.5,"flipper_length_mm")
regg = lm(body_mass_g~ flipper_length_mm, data = penguins_missing, na.action=na.omit) 
```

-   This creates 50% missing at random data in the column flipper_length_mm using the missMethods [@missMethods] package.
-   0.7569 is the R-Squared for the linear model where missing values are excluded from the dataset.

## Single Imputation

```{r}
#| warning: false
#| echo: true
# Make a copy of the dataset and calculate the mean of the specific column
penguins_Mean_imputated <- penguins_missing


# If we only replaced the missing values for flipper_length_mm
flipper_length_mm_mean_value <- mean(penguins$flipper_length_mm, na.rm = TRUE)
penguins_Mean_imputated$flipper_length_mm[is.na(penguins_Mean_imputated$flipper_length_mm)] <- flipper_length_mm_mean_value

regg = lm(body_mass_g~ flipper_length_mm, data = penguins_Mean_imputated, na.action=na.omit)
```

-   0.4016 is the R-Squared for the linear model where missing values are imputed as the mean.

## Single Imputation Continued

```{r}
#| echo: true
#| warning: false
penguins_imputed <- impute_lm(penguins_missing, flipper_length_mm ~ species + bill_length_mm + bill_depth_mm)

regg = lm(body_mass_g~ flipper_length_mm, data = penguins_imputed)
```

-   0.7732 is the R-Squared for the linear model where imputation of missing values was performed with another linear model before modeling.

## Multiple Imputation

```{r}
#| warning: false
#| echo: true
#| output: false
library(mice)
penguins_missing.imp <- mice(penguins_missing, m=5)
fit <- with(penguins_missing.imp, lm(body_mass_g~ flipper_length_mm))
print(pool.r.squared(fit))
```

-   Since multiple imputation creates multiple linear regressions based on multiple imputations, the estimated r-value is 0.7317 with a 95% confidence interval between 0.6664 and 0.7861. [@mice]

# Conclusion

## Summary

-   Most, if not all, datasets will have missing values and require values to be imputed. We used a reasonably clean palmerpenguin dataset to demonstrate the difference between actual and imputed values. Not all imputation methods yielded the same results, nor were they a perfect match to the original values.

-   The best methodology will be based on several factors, such as what type of data is missing, portion of missing values, software packages, etc. We advise everyone to research the best methodology for their dataset; every method has benefits and drawbacks.
